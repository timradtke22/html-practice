/* did this because of normalize css, look into sanitize css as well */
body {
    margin: 10px;
}

/* you cannot have elements with the same id, but elements can have the 
same class */
#products {
    color: blue;
}

/* you can do exact match without the * in the *=, but its fragile
    using the * is similar to LIKE */
a[href*="google"] {
    color: green;
}

/* there are other conditions, 
^ - starts with given value, can use it for https
$ - ends with given value
can use multiple attributes like this
a[href^="https"][href$=.com]
but usually try sticking to selecting by id, type, and class*/

/* Can select elements BASED ON RELATION to other elements */

#products > p {
    /* applies to any p element child in the products section, element, etc... */
    color: red;
    /* doing > p means chose only the direct child element 
    + will chose the direct sibling of the element, so the next element inline with that element 
    ~ will chose any sibling of the element */
}

#products ~ p {
    color: purple;
}

/* relational selectors can be fragile, and since computers read right to left there might be low efficiency not optimized */

/* PSEUDO CLASS SELECTORS */

/* will only do the first child of the article element, fragile because if move elements around css can break */
/* first of type applies to first occurence of every type */
article p:first-of-type {
    font-size: 140%;
    font-style: italic;
}

article:last-of-type {
    font-weight: bold;
}

/* can do odd, even, or something like 3n and on (every third item) */
ul li:nth-child(even){
    color: blueviolet;
}

/* change color of hyperlink */

a:visited,
a:link {
    color: dodgerblue;
}

/* when you use hover, use focus as well because will cover selecting with mouse or tab key */
a:hover, a:focus {
    color: deeppink;
}

/* this is a pseudo element selector */

/* pseudo classes is ONE COLON, pseudo elements are TWO COLONS */
p::first-letter {
    font-size: 140%;
    font-weight: bold;
}

p::first-line {
    font-weight: bold;
}

/* dont have to chose a type, !important takes supremacy over all rules, it can make CSS messy so avoid it */
::selection {
    background-color: pink !important;
}

p::after {
    content: "...";
    /* not a real html element, its a pseudo element inserted into the Dom, can put anything here */
    display: block; 
    /* block means has taken entire space of the line rather than inline */
}

/* selector specificity */
/*  BROWSER WILL SELECT THE SELECTOR MORE SPECIFIC. 
ORDER IN TRIANGLE:
ID
CLASS
TYPE
 */
h1 {
    color: dodgerblue;
}

.highlight {
    color: deeppink;
}

#product {
    color: green;
}
